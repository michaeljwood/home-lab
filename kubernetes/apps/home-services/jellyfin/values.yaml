# -- Ingress configuration. See: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  className: "external"
  annotations:
    external-dns.alpha.kubernetes.io/target: external.mjwood.org
  hosts:
    - host: media.mjwood.org
      paths:
        - path: /
          pathType: Prefix

# -- Resource requests and limits for the Jellyfin container.
resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
#   memory: 128Mi

livenessProbe:
  initialDelaySeconds: 60

# -- Additional volumes to mount in the Jellyfin pod.
volumes:
  - name: jellyfin-media
    persistentVolumeClaim:
      claimName: jellyfin-media
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# -- Additional volume mounts for the Jellyfin container.
volumeMounts:
  - name: jellyfin-media
    mountPath: "/data/media"
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

jellyfin:
  # -- Enable DLNA. Requires host network. See: https://jellyfin.org/docs/general/networking/dlna.html
  enableDLNA: false
  # -- Custom command to use as container entrypoint.
  command: []
  # -- Additional arguments for the entrypoint command.
  args: []
  # -- Additional environment variables for the container.
  env: []

persistence:
  config:
    storageClass: 'truenas-iscsi'
    size: 25Gi
  media:
    # -- set to false to use emptyDir
    enabled: false
    # -- Type of volume for media storage (pvc, hostPath, emptyDir). If 'enabled' is false, 'emptyDir' is used regardless of this setting.
    type: pvc
    # -- PVC specific settings, only used if type is 'pvc'.
    accessMode: ReadWriteOnce
    size: 25Gi
    # -- Custom annotations to be added to the PVC
    annotations: {}
    # -- If undefined (the default) or set to null, no storageClassName spec is set, choosing the default provisioner.
    storageClass: ''
    ## -- Use an existing PVC for this mount
    # existingClaim: ''
